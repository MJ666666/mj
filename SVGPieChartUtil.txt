

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Font;
import java.awt.RadialGradientPaint;
import java.awt.Rectangle;
import java.awt.geom.Point2D;
import java.io.File;
import java.io.IOException;
import java.util.Locale;

import org.jfree.chart.ChartFactory;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.StandardChartTheme;
//import org.jfree.chart.drawable.GradientPainter;
import org.jfree.chart.plot.PieLabelLinkStyle;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.title.TextTitle;
import org.jfree.chart.ui.HorizontalAlignment;
import org.jfree.chart.ui.RectangleAnchor;
import org.jfree.chart.ui.RectangleEdge;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.general.PieDataset;
import org.jfree.graphics2d.svg.SVGGraphics2D;
import org.jfree.graphics2d.svg.SVGUtils;

/**
 * A demo/test for a pie chart.
 */
public class SVGPieChartUtil {

    static {
        // set a theme using the new shadow generator feature available in
        // 1.0.14 - for backwards compatibility it is not enabled by default
        ChartFactory.setChartTheme(new StandardChartTheme("JFree/Shadow"));
    }

    /**
     * Creates a sample dataset.
     *
     * Source: http://www.bbc.co.uk/news/business-15489523
     *
     * @return A sample dataset.
     */
    private static PieDataset createDataset() {
        DefaultPieDataset dataset = new DefaultPieDataset();
        dataset.setValue("待初验（25%）", 4);
        dataset.setValue("待终验（25%）", 4);
        dataset.setValue("已移交（25%）", 4);
        dataset.setValue("建设中（25%）", 4);
        return dataset;
    }

    /**
     * Creates a chart.
     *
     * @param dataset  the dataset.
     *
     * @return A chart.
     */
    public static JFreeChart createChart(PieDataset dataset) {

        JFreeChart chart = ChartFactory.createPieChart(
                "项目状态分布图",  // chart title
                dataset,false,false, Locale.CHINA);
        chart.removeLegend();

        // set a custom background for the chart
//        chart.setBackgroundPainter(new GradientPainter(new Color(20, 20, 20),
//                RectangleAnchor.TOP_LEFT, Color.DARK_GRAY,
//                RectangleAnchor.BOTTOM_RIGHT));

        // customise the title position and font
        TextTitle t = chart.getTitle();
        t.setHorizontalAlignment(org.jfree.ui.HorizontalAlignment.CENTER);
        t.setPaint(new Color(39, 64, 139));
        t.setFont(new Font("Arial", Font.BOLD, 26));

        PiePlot plot = (PiePlot) chart.getPlot();
//        plot.setBackgroundPainter(null);
        plot.setInteriorGap(0.04);
//        plot.setBorderPainter(null);

        // use gradients and white borders for the section colours
        plot.setSectionPaint("待初验（25%）", createGradientPaint(new Color(200, 200, 255), Color.BLUE));
        plot.setSectionPaint("待终验（25%）", createGradientPaint(new Color(255, 200, 200), Color.RED));
        plot.setSectionPaint("已移交（25%）", createGradientPaint(new Color(200, 255, 200), Color.GREEN));
        plot.setSectionPaint("建设中（25%）", createGradientPaint(new Color(200, 255, 200), Color.YELLOW));
//        plot.setDefaultSectionOutlinePaint(Color.WHITE);
        plot.setSectionOutlinesVisible(true);
//        plot.setDefaultSectionOutlineStroke(new BasicStroke(2.0f));

        // customise the section label appearance
        plot.setLabelFont(new Font("Courier New", Font.BOLD, 18));
        plot.setLabelLinkPaint(Color.WHITE);
        //plot.setLabelLinkStroke(new BasicStroke(3.0f));
        plot.setLabelLinkStyle(PieLabelLinkStyle.QUAD_CURVE);
        plot.setLabelOutlineStroke(null);
        plot.setLabelPaint(Color.WHITE);
        plot.setLabelBackgroundPaint(null);
        // add a subtitle giving the data source
        TextTitle source = new TextTitle("PM2项目管理系统",
                new Font("Courier New", Font.PLAIN, 12));
        source.setPaint(Color.WHITE);
        source.setPosition(org.jfree.ui.RectangleEdge.BOTTOM);
        source.setHorizontalAlignment(org.jfree.ui.HorizontalAlignment.RIGHT);
        chart.addSubtitle(source);
        return chart;

    }

    /**
     * A utility method for creating gradient paints.
     *
     * @param c1  color 1.
     * @param c2  color 2.
     *
     * @return A radial gradient paint.
     */
    private static RadialGradientPaint createGradientPaint(Color c1, Color c2) {
//        Point2D center = new Point2D.Float(0, 0);
//        float radius = 200;
//        float[] dist = {0.0f, 1.0f};
//        return new RadialGradientPaint(center, radius, dist,
//                new Color[] {c1, c2});
        return null;
    }

    /**
     * Starting point for the demo.
     *
     * @param args  ignored.
     *
     * @throws IOException
     */
    public static void main(String[] args) throws IOException {
        JFreeChart chart = createChart(createDataset());
        SVGGraphics2D g2 = new SVGGraphics2D(600, 400);
//        g2.setRenderingHint(JFreeChart.KEY_SUPPRESS_SHADOW_GENERATION, true);
        Rectangle r = new Rectangle(0, 0, 600, 400);
        chart.draw(g2, r);
        File f = new File("SVGPieChartUtil.svg");
        SVGUtils.writeToSVG(f, g2.getSVGElement());
    }
}
